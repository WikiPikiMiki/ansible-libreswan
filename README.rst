Ansible role for libreswan
===========================

Context
========

Install, configure and start/stop libreswan tunnels

Playbook
==========

.. code-block:: yaml

   ---
   - hosts: all
     gather_facts: True
     
     vars:
       nss_defined_password: True #defined to true only the first launch on a node
       nss_db_password: somepassword # should be encrypted obviously
   
       rsa_key_file: rsa_key
       ca_nickname: evens
       ca_subject: epiconcept
       ca_trusttargs: TC,C,T
       ca_issuer: evens
   
       cert: False #To set to true if you want to create required cert with the information set above
   
       secret_passwd:
         - { user: evens, password: solignac, connection: xauth }
	 - { user: evens, password: soligna2c, connection: xauth }
	 - { user: evens, password: soligna1c, connection: xauth }
	   #should be encryted obviously
     
       protostack: netkey
       plutostderrlog: /var/log/pluto.log

       setup_items: |- #to add some items on global configuration
         ikev2=insist

       my_tunnels: [mysubnet, mysubnet6, mytunnel] #could'nt find a way to go through all conn_name used, you'll have to set them here too
     
       tunnel_configuration: #to create your subnets, tunnels...
         - conn_name: mysubnet
	   conn_configuration: |-
	      dlpldpw
	      dpwlpdlw

	 - conn_name: mysubnet6
	   conn_configuration: |-
	      dlpldpw
	      dpwlpdlw
	 
	 - conn_name: mytunnel
	   conn_configuration: |-
	      dlpldpw
	      dpwlpdlw
       
     tasks:
   
       - include_role: name=ansible-libreswan
         become: True
         environment: "{{ proxy_env }}"

Play
=======
::

   ansible-playbook libreswan.yml -l $node -e cert=True -e nss_defined_password=True

Where ``cert=True`` indicate that you want to generate a RAW RSA key for the machine and where ``nss_defined_password=True`` indicate that you want to set a new password for the BD.

tips : 

- You can get the public RSA key generated by the ``create RAW RSA key`` tasks using this register : ``{{ pubkey.stdout }}`` but does dot print in check mode (-C). 
   
License
========

`MIT <./LICENSE>`_

Author
=======

Evens SOLIGNAC
