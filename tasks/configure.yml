---
- set_fact:
    initialized_db:
      - key4.db
      - cert9.db

- name: Initializing NSS database
  command: ipsec initnss --nssdir /etc/ipsec.d
  args: 
    creates: /etc/ipsec.d/{{ item }}
  with_items: "{{ initialized_db }}"

- block:
  - name: Set nss db secret
    expect:
      command: certutil -W -d sql:/etc/ipsec.d
      responses: 
        Enter new password: "{{ libreswan_nss_db_password }}"
        Re-enter password: "{{ libreswan_nss_db_password }}"

  - name: Add nss DB secret to nsspasswd file
    lineinfile: 
      destfile: /etc/ipsec.d/nsspassword 
      line: "NSS Certificate DB:{{ libreswan_nss_db_password }}"
      create: yes 
      state: present
  when: set_nssdb_secret|default(False)|bool and libreswan_nss_db_password is defined

- name: Create host own RAW RSA key
  command: ipsec newhostkey --output "/etc/ipsec.d/{{ libreswan_rsa_key_file }}.secrets"
  args:  
    creates: /etc/ipsec.d/{{ libreswan_rsa_key_file }}.secrets

- stat: path="/etc/ipsec.d/{{ libreswan_rsa_key_file }}.secrets"
  register: rsa_key

- name: Get RSA pubkey generated
  register: pubkey
  shell: grep pubkey "/etc/ipsec.d/{{ libreswan_rsa_key_file }}.secrets" | sed -e 's/^.*=//'
  when: rsa_key.stat.exists == True

- debug: { var: 'pubkey.stdout' }

- name: Fetch pubkey 
  fetch: src="/etc/ipsec.d/{{ item }}" dest="{{ playbook_dir }}/files/{{ inventory_hostname }}-{{ item }}" flat=yes
  with_items:
    - "{{ libreswan_rsa_key_file }}.secrets"

- block:
  - name: Create CA certificate
    expect:
      command: certutil -S -k rsa -n "{{ libreswan_ca_nickname }}" -s "CN={{ libreswan_ca_subject }}" -v 12 -t "{{ libreswan_ca_trusttargs }}" -x -d sql:/etc/ipsec.d
      responses:
        Enter Password or Pin for "NSS Certificate DB": "{{ libreswan_nss_db_password }}"
        Continue typing until the progress meter is full: dkewokopwkefopkjfejrpfjfejfiqjfijqjfjfqpwjfpqjwefpjqpwejfpqwejfpojqwepfojpweojfpj
        Finished.  Press enter to continue: /bin/bash -c "echo"      

  - name: Create a signed user cert
    expect:
      command: certutil -S -k rsa -c "{{ libreswan_ca_issuer }}" -n "{{ libreswan_ca_nickname }}" -s "CN={{ libreswan_ca_subject }}" -v 12 -t "{{ libreswan_ca_trusttargs }}" -d sql:/etc/ipsec.d
      responses:
        Enter Password or Pin for "NSS Certificate DB": "{{ libreswan_nss_db_password }}"
        Continue typing until the progress meter is full: dkewokopwkefopkjfejrpfjfejfiqjfijqjfjfqpwjfpqjwefpjqpwejfpqwejfpojqwepfojpweojfpj
        Press enter to continue: /bin/bash -c "echo"
  when: create_ca_cert|default(False)|bool
  
- name: Template passwd file
  template:
    src: passwd.conf.j2
    dest: /etc/ipsec.d/passwd
    owner: root
    group: root
    mode: 0600

- name: Template ipsec configuration
  template:
    src: ipsec.conf.j2
    dest: /etc/ipsec.conf
    owner: root
    group: root
    mode: 0600

- name: Template secrets file
  template:
    src: libreswan.secrets.j2
    dest: /etc/ipsec.d/libreswan.secrets
    owner: root
    group: root
    mode: 0600

- name: Template pluto logrotate
  template:
    src: pluto.j2
    dest: /etc/logrotate.d/pluto
    owner: root
    group: root
    mode: 0600
